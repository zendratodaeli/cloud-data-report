generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  name          String   @unique
  email         String?  @unique
  address       String
  phone         Int
  contactPerson String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Store {
  id         String     @id @default(uuid())
  userId     String
  name       String
  categories Category[] @relation("StoreToCategory")
  products   Product[]  @relation("StoreToProduct")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Category {
  id        String    @id @default(uuid())
  name      String
  storeId   String
  store     Store     @relation("StoreToCategory", fields: [storeId], references: [id])
  products  Product[] @relation("CategoryToProduct")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([storeId])
}

model Product {
  id              String   @id @default(uuid())
  storeId         String
  store           Store    @relation("StoreToProduct", fields: [storeId], references: [id])
  categoryId      String
  category        Category @relation("CategoryToProduct", fields: [categoryId], references: [id])
  name            String   @unique
  capital         Int
  pricePerPiece   Int
  quantity        Int
  sold            Sold[]   @relation("ProductToSold")
  soldOutQuantity Int      @default(0)
  remainQuantity  Int
  grossIncome     Int      @default(0)
  income          Int
  tax             Int
  grossProfit     Int      @default(0)
  profit          Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([storeId])
  @@index([categoryId])
}

model Sold {
  id           String   @id @default(uuid())
  productId    String
  product      Product  @relation("ProductToSold", fields: [productId], references: [id])
  totalSoldOut Int
  income       Int
  netProfit    Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
